// AUTO-GENERATED by protoc-gen-webviewrpc
// (C) "Client" side: {{.ServiceName}}Client
// import { WebViewRpcClient } from 'your-lib'; // (선택사항)

// import {
//   {{range .Methods}}
//   {{.InputType}}, {{.OutputType}},
//   {{end}}
// } from './...';

export class {{.ServiceName}}Client {
  /**
   * @param {WebViewRpcClient} rpcClient
   */
  constructor(rpcClient) {
    this.rpcClient = rpcClient;
  }

  {{range .Methods}}
  /**
   * async {{.MethodName}}
   * @param { {{.InputType}} } requestObj
   * @returns {Promise< {{.OutputType}} >}
   */
  async {{.MethodName}}(requestObj) {
    // 1) encode requestObj => Uint8Array
    const reqBytes = encode{{.InputType}}(requestObj); // 예: MyMessage.encode(...)
    // 2) rpcClient.callMethod => Promise<Uint8Array>
    const respBytes = await this.rpcClient.callMethod("{{$.ServiceName}}.{{.MethodName}}", reqBytes);
    // 3) decode => responseObj
    const respObj = decode{{.OutputType}}(respBytes);
    return respObj;
  }
  {{end}}
}
